<style type="less">
@import '../styles/variables/color.less';
.ptx-tree-item {
  font-size: 14px;
  .weui-flex__item {
    padding: 10px;

    &:first-child {
      border-right: 1px solid @weuiTextColorTips;
    }
  }
  &.ptx-gen-active {
    background-color: @weuiColorPrimary;

    .weui-flex__item {
      color: @weuiBgColorDefault;
    }
  }
}
.ptx-gen-num {
  color: @weuiTextColorGray;
  flex: 0.3;
  text-align: right;
}
.ptx-name {
  flex: 1;
}
.ptx-group {
  flex: 1.5;
  color: @weuiLinkColorDefault;
}
.ptx-icons {
  flex: 0.5;
}
</style>
<template>
    <view class="weui-flex ptx-tree-item {{ activeID == item.num ? 'ptx-gen-active' : ''}} " @tap="activePeople({{item.num}})">
      <view class="weui-flex__item ptx-gen-num"><view class="">{{item.num}}</view></view>
      <view class="weui-flex__item ptx-name"><view class="placeholder">{{item.name}}</view></view>
      <view class="weui-flex__item ptx-group"><view class="placeholder">{{item.group}}</view></view>
      <view class="weui-flex__item ptx-icons" @tap="gotoPeople({{item.num}})"><text class="iconfont icon-browse" /></view>
    </view>
</template>
<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
// import { ACTIVE_SEARCH_PEOPLE } from '../store/types/people';
import { activePeople } from '../store/actions';

@connect(
  {
    activeID(state) {
      // console.log(state, 'new state');
      return state.people.activeID;
    }
  },
  {
    activePeople
  }
)
export default class GroupItem extends wepy.component {
  props = {
    item: {}
    // active: {
    //   type: Number,
    //   value: 0,
    //   twoWay: true
    // }
  };
  data = {};
  methods = {
    // selectItem(value) {
    //   // this.active = value;
    //   // this.$apply();
    //   // console.log(this.$parent.active);
    // },
    gotoPeople(value) {
      wx.navigateTo({ url: '/pages/zong/show' });
    }
  };
  // watch = {
  //   active(newValue, oldValue) {
  //     console.log(`num value: ${oldValue} -> ${newValue}`);
  //   }
  // };
  onLoad() {
    console.log(this.activeID, 'is active ID');
  }
}
</script>
