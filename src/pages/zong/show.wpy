

<style lang="less">
@import '../../styles/variables/color.less';
.ptx-user-group {
  padding: 20rpx;
}

.ptx-user {
  text-align: center;
}

.ptx-current {
  padding: 10rpx 32rpx;
}

.ptx-current-hasband {
  text-align: center;
  .user-avatar {
    width: 250rpx;
    height: 250rpx;
  }
}

.ptx-current-wife {
  text-align: center;

  .userinfo {
    font-size: 26rpx;
  }
}

.ptx-current-userinfo {
  font-size: 26rpx;
  padding: 20rpx 32rpx;
  view {
    text {
      background: @weuiLineColorLight;
      width: 100rpx;
      margin-right: 32rpx;
      font-weight: bolder;
    }
  }
}

.ptx-progress {
  flex: 0.5;
  padding-top: 32rpx;
}

.ptx-location {
  text-align: right;
  color: @weuiTextColorGray;
  .iconfont {
    color: @weuiColorPrimary;
  }
}

.ptx-actions {
  .icon-like {
    color: @weuiColorWarn;
  }
}

.ptx-load-more {
  color: @weuiLinkColorDefault;
}

.ptx-link {
  color: @weuiLinkColorDefault;
  cursor: pointer;
  &:hover,
  &:active {
    color: @weuiColorPrimary;
  }
}

.userinfo {
  font-size: 32rpx;
}

@keyframes zoomuser {
  from {
    width: 10rpx;
    height: 10rpx;
  }
  to {
    width: 150rpx;
    height: 150rpx;
  }
}

.refresh-user {
  animation: 800ms zoomuser 1;
  animation-fill-mode: forwards;
}

.user-avatar {
  width: 150rpx;
  height: 150rpx;
  border-radius: 50%;
}
</style>



<template>
  <view class="page">
    <view class="page__hd">
      <view class="weui-flex ptx-user-group">
        <view class="weui-flex__item ptx-user">
          <image @tap="gotoUser" class="user-avatar {{loading ? '' : 'refresh-user'}}" src="{{ parents[0].avatar }}" background-size="cover"/>
          <view class="userinfo">({{parents[0].role}}){{ parents[0].name}}</view>
        </view>
        <view class="weui-flex__item ptx-current-wife" wx:for-items="{{parents[1]}}" wx:for-index="index" wx:for-item="item" wx:key="id">
          <image @tap="gotoUser" class="user-avatar {{loading ? '' : 'refresh-user'}}" src="{{ item.avatar }}" background-size="cover"/>
          <view class="userinfo">({{item.role}}){{ item.name}}</view>
        </view>
      </view>

    </view>

    <view class="page__bd ">
      <view class="weui-panel weui-panel_access  ptx-current">
        <view class="weui-panel__bd">
          <view class="weui-flex ptx-actions">
            <view class="weui-flex__item ">
              <text class="font_26 ptx-link">第{{ currentLevel }}世 <text class="iconfont icon-mine font-26" />这个是我</text>
            </view>
            <view class="weui-flex__item ptx-location">
              <text class="iconfont icon-like" />
              <text class="iconfont icon-share" />
            </view>
          </view>
        </view>

        <view class="weui-panel__bd">
          <view class="weui-flex ptx-me">
            <view class="weui-flex__item ptx-current-hasband">
              <image @tap="gotoUser" class="user-avatar" src="{{ current[0].avatar }}" background-size="cover"/>
              <view class="userinfo">({{current[0].role}}){{ current[0].name}} </view>
            </view>
            <view class="weui-flex__item ptx-current-wife" wx:for-items="{{current[1]}}" wx:for-index="index" wx:for-item="item" wx:key="id">
              <image @tap="gotoUser" class="user-avatar {{loading ? '' : 'refresh-user'}}" src="{{ item.avatar }}" background-size="cover"/>
              <view class="userinfo">({{item.role}}){{ item.name}}</view>
            </view>
          </view>

          </view>
          <view class="weui-panel__ft">
            <view class="weui-flex">
              <view class="weui-flex__item ptx-progress">
                <view class="weui-progress">
                  <view class="weui-progress__bar">
                      <progress percent="30" stroke-width="5" />
                  </view>
                </view>
              </view>
              <view class="weui-flex__item ptx-location">
                <text class="font_26">北京市海淀区西二旗铭科苑 <text class="iconfont icon-coordinates_fill" /></text>
              </view>

            </view>
          </view>
      </view>

      <view class="weui-panel">
        <view class="weui-panel__hd">基本资料</view>
        <view class="weui-panel__bd ptx-current-userinfo">
          <view wx:for-items="{{currentPeople}}" wx:for-index="index" wx:for-item="item" wx:key="id"><text>{{item[0]}}</text>{{item[1]}}</view>

        </view>
      </view>
    </view>

    <view class="page__ft" wx:if="{{children}}">
      <view class="weui-flex ptx-user-group">
        <view class="weui-flex__item ptx-user" wx:for-items="{{children}}" wx:for-index="index" wx:for-item="item" wx:key="id">
          <image @tap="gotoUser" class="user-avatar {{loading ? '' : 'refresh-user'}}" src="{{ item[0].avatar }}" background-size="cover"/>
          <view class="userinfo">({{item[0].role}}){{ item[0].name}}</view>
        </view>
      </view>
    </view>

    <view class="weui-loadmore">
        <view wx:if="{{this.loading}}" class="weui-loading"></view>
        <view class="weui-loadmore__tips ptx-load-more">向下拖动看更多</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
// import Panel from '@/components/panel'; // alias example
// import SearchBar from '@/components/searchbar'; // alias example
import { updateCurrentPeopleIndex } from '@/store/actions/people';

@connect(
  {
    selectedPeopleDetail(state) {
      console.log(state.people, 'current state people');
      return state.people.selectedPeopleDetail;
    }
  },
  {
    updateCurrentPeopleIndex
  }
)
export default class Show extends wepy.page {
  config = {
    navigationBarTitleText: '个人资料 - 谱天下',
    enablePullDownRefresh: true,
    onReachBottomDistance: 50
  };
  components = {};

  mixins = [];

  data = {
    currentLevel: 0,
    currentIndex: 0,
    currentPeople: [],
    parents: [],
    current: [],
    children: [],
    //   {
    //     role: '父',
    //     name: '良系',
    //     avatar: '../../images/man.jpg'
    //   },
    //   {
    //     role: '母',
    //     name: '春秀',
    //     avatar: '../../images/lady.jpg'
    //   }
    // ],
    // current: [
    //   {
    //     role: '夫',
    //     name: '作平',
    //     avatar: '../../images/hasband.jpg'
    //   },
    //   {
    //     role: '妻',
    //     name: '范氏',
    //     avatar: '../../images/wife.jpg'
    //   }
    // ],
    // children: [
    //   {
    //     role: '子',
    //     name: '善凯',
    //     avatar: '../../images/boy.jpg'
    //   },
    //   {
    //     role: '子',
    //     name: '善策',
    //     avatar: '../../images/man.jpg'
    //   }
    // ],
    loading: false
  };

  computed = {};

  methods = {
    gotoUser() {
      console.log('goto user');
      wx.navigateTo({ url: '/pages/wo/index' });
    }
  };

  events = {};

  onPullDownRefresh() {
    console.log('reached to top');
    if (this.currentIndex > 0) {
      this.currentIndex--;
      // this.$apply();
      console.log('father:', this.currentIndex);
      this.methods.updateCurrentPeopleIndex(this.currentIndex);
      this.loadData();
    }
    wx.stopPullDownRefresh();
    this.loading = false;
    // this.parents = [
    //   {
    //     role: '父',
    //     name: '会金',
    //     avatar: '../../images/man.jpg'
    //   },
    //   {
    //     role: '母',
    //     name: '吴氏',
    //     avatar: '../../images/lady.jpg'
    //   }
    // ];
    // this.current = [
    //   {
    //     role: '父',
    //     name: '良系',
    //     avatar: '../../images/man.jpg'
    //   },
    //   {
    //     role: '母',
    //     name: '春秀',
    //     avatar: '../../images/lady.jpg'
    //   }
    // ];
    // this.children = [
    //   {
    //     role: '夫',
    //     name: '作平',

    //     avatar: '../../images/hasband.jpg'
    //   },
    //   {
    //     role: '妻',
    //     name: '范氏',
    //     avatar: '../../images/wife.jpg'
    //   }
    // ];
  }

  onReachBottom() {
    const index = this.currentIndex + 1;
    console.log('reached to bottom');

    if (this.selectedPeopleDetail.allItems[index]) {
      this.currentIndex = index;
      // this.methods.updateCurrentPeopleIndex(index);
      // this.$apply();
      this.loadData();
    }
    // console.log('reach bottom');
    // this.parents = [
    //   {
    //     role: '父',
    //     name: '良系',
    //     avatar: '../../images/man.jpg'
    //   },
    //   {
    //     role: '母',
    //     name: '春秀',
    //     avatar: '../../images/lady.jpg'
    //   }
    // ];
    // this.current = [
    //   {
    //     role: '夫',
    //     name: '作平',

    //     avatar: '../../images/hasband.jpg'
    //   },
    //   {
    //     role: '妻',
    //     name: '范氏',
    //     avatar: '../../images/wife.jpg'
    //   }
    // ];
    // this.children = [
    //   {
    //     role: '子',
    //     name: '善凯',
    //     avatar: '../../images/boy.jpg'
    //   },
    //   {
    //     role: '子',
    //     name: '善策',
    //     avatar: '../../images/man.jpg'
    //   }
    // ];
    this.loading = false;
  }

  loadData() {
    const formatShow = (p, role = '夫') => {
      if (role === '夫') {
        return {
          role,
          name: p.名,
          avatar: '../../images/hasband.jpg'
        };
      } else if (role === '妻' || role === '母') {
        if (p.妻) {
          return p.妻.map(v => ({
            role,
            name: v.名,
            avatar: '../../images/wife.jpg'
          }));
        }
      } else {
        // TODO: GET children from api
        // if ( role === '女') {

        // } else {

        // }
        return {
          role,
          name: p.名,
          avatar: '../../images/man.jpg'
        };
      }
    };

    if (this.selectedPeopleDetail) {
      const { allItems, currentIndex } = this.selectedPeopleDetail;
      this.currentPeople = Object.entries(allItems[currentIndex]);
      this.currentIndex = currentIndex;
      console.log(currentIndex, '<<<<< currentIndex', allItems);

      this.currentLevel = allItems[currentIndex].level;
      this.current = [
        formatShow(allItems[currentIndex], '夫'),
        formatShow(allItems[currentIndex], '妻')
      ];

      // get children
      // console.log(this.current);
      if (allItems[currentIndex + 1]) {
        this.children = [
          formatShow(allItems[currentIndex + 1], '子'),
          formatShow(allItems[currentIndex + 1], '女')
        ];
        console.log('new children', currentIndex + 1);
      } else {
        this.children = null;
      }

      // get parent
      if (currentIndex > 0) {
        console.log('new parent', currentIndex - 1);
        this.parents = [
          formatShow(allItems[currentIndex - 1], '父'),
          formatShow(allItems[currentIndex - 1], '母')
        ];
      }
    }
  }

  onLoad() {
    this.loadData();
    this.loading = false;
  }
}
</script>
